{"version":3,"sources":["Head.js","Card.js","CardList.js","App.js","index.js"],"names":["Head","Card","props","className","src","url","alt","name","type","stat","CardList","state","urls","types","stats","prevProps","prevState","this","Promise","all","map","index","fetch","then","resp","json","response","setState","sprites","front_default","slot","i","base_stat","pokemonList","starters","pok","length","key","Fragment","Component","App","pokemons","res","results","filter","poke","urlList","ReactDOM","render","document","getElementById"],"mappings":"gUAUeA,G,YANF,WACT,OACI,gD,OCyBOC,G,MAzBF,SAAEC,GAEX,OACI,yBAAKC,UAAU,QACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,SAASC,IAAMF,EAAMG,IAAMC,IAAI,aAIlD,4BAAMJ,EAAMK,MACZ,oCAAWL,EAAMM,MACjB,sCACA,4BACI,sCAAaN,EAAMO,KAAK,IACxB,gDAAuBP,EAAMO,KAAK,IAClC,+CAAsBP,EAAMO,KAAK,IACjC,wCAAeP,EAAMO,KAAK,IAC1B,uCAAcP,EAAMO,KAAK,IACzB,mCAAUP,EAAMO,KAAK,QCkDtBC,E,2MAnEXC,MAAQ,CACJC,KAAM,GACNC,MAAO,GACPC,MAAO,I,kFAEQC,EAAWC,GAAW,IAAD,OACpC,GAAGD,EAAUH,OAASK,KAAKf,MAAMU,KAAM,CACnC,IAAMA,EAAOK,KAAKf,MAAMU,KAExBM,QAAQC,IAAIP,EAAKQ,KAAI,SAACf,EAAKgB,GACvB,OAAOC,MAAMjB,GAAKkB,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UACnCF,MAAK,SAAAG,GACF,EAAKC,UAAS,SAAAX,GAAS,MAAK,CACxBJ,KAAK,GAAD,mBACGI,EAAUJ,MADb,CAEAc,EAASE,QAAQC,gBAErBhB,MAAM,GAAD,mBACEG,EAAUH,OADZ,CAEDa,EAASb,MAAMO,KAAI,SAAAU,GACf,OAAOA,EAAKtB,KAAKD,KAAO,SAGhCO,MAAM,GAAD,mBACEE,EAAUF,OADZ,CAEDY,EAASZ,MAAMM,KAAI,SAACX,EAAMsB,GACtB,OAAQtB,EAAKuB,UAAY,uB,+BAgB3C,IAAD,OACCC,EAAchB,KAAKf,MAAMgC,SAASd,KAAI,SAACe,EAAKd,GAC9C,OAAI,EAAKV,MAAMG,MAAMsB,OAAS,EACnB,kBAAC,EAAD,CACKC,IAAOhB,EACPd,KAAO4B,EAAI5B,KACXF,IAAM,EAAKM,MAAMC,KAAKS,GACtBb,KAAO,EAAKG,MAAME,MAAMQ,GACxBZ,KAAO,EAAKE,MAAMG,MAAMO,KAG7B,QAKf,OAEQ,kBAAC,IAAMiB,SAAP,KACML,O,GA/DCM,aC2CRC,E,2MAzCX7B,MAAQ,CACJ8B,SAAU,I,mFAGO,IAAD,OAChBnB,MAAM,sCACDC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAmB,GACF,EAAKf,SAAU,CAAEc,SAAUC,EAAIC,e,+BAKjC,IAGAT,EADejB,KAAKN,MAAlB8B,SACkBG,QAAO,SAAAC,GAC7B,MAAiB,cAAdA,EAAKtC,MAAsC,eAAdsC,EAAKtC,MACnB,aAAdsC,EAAKtC,KACEsC,EAEA,QAITC,EAAUZ,EAASd,KAAI,SAAAe,GACzB,OAAOA,EAAI9B,OAEf,OAEI,kBAAC,IAAMiC,SAAP,KACM,kBAAC,EAAD,MACA,yBAAKnC,UAAU,aACX,kBAAC,EAAD,CAAU+B,SAAWA,EAAWtB,KAAOkC,U,GAnC3CP,aCClBQ,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.7b26277d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Head.sass';\r\n\r\n\r\nconst Head = () =>{\r\n    return(\r\n        <h1>Kanto Starters</h1>\r\n    );\r\n}\r\n\r\nexport default Head\r\n","import React from 'react';\r\nimport './Card.sass';\r\n\r\n\r\n\r\n\r\nconst Card = ( props ) => {\r\n\r\n    return(\r\n        <div className=\"Card\">\r\n            <div className=\"spriteContainer\">\r\n                <img className=\"Sprite\" src={ props.url } alt=\"pokemon\"/>\r\n                {/* <img className=\"Sprite\" src=\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/1.png\" alt=\"pokemon\"/> */}\r\n            </div>\r\n\r\n            <h2>{ props.name }</h2>\r\n            <p>Type: { props.type }</p>\r\n            <h4>Stats:</h4>\r\n            <ul>\r\n                <li>Speed: { props.stat[0] }</li>\r\n                <li>Special Defense: { props.stat[1] }</li>\r\n                <li>Special Attack: { props.stat[2] }</li>\r\n                <li>Defense: { props.stat[3] }</li>\r\n                <li>Attack: { props.stat[4] }</li>\r\n                <li>HP: { props.stat[5] }</li>\r\n                {/* <li>{ props.url }</li> */}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card\r\n","import React, { Component } from 'react';\r\nimport Card from './Card';\r\n\r\n\r\n\r\nclass CardList extends Component {\r\n\r\n    state = {\r\n        urls: [],\r\n        types: [],\r\n        stats: []\r\n    }\r\n    componentDidUpdate(prevProps, prevState){\r\n        if(prevProps.urls !== this.props.urls) {\r\n            const urls = this.props.urls\r\n\r\n            Promise.all(urls.map((url, index) =>{\r\n                return fetch(url).then(resp => resp.json())\r\n                .then(response => {\r\n                    this.setState(prevState => ({\r\n                        urls: [\r\n                            ...prevState.urls,\r\n                            response.sprites.front_default\r\n                        ],\r\n                        types: [\r\n                            ...prevState.types,\r\n                            response.types.map(slot =>{\r\n                                return slot.type.name + \" \"\r\n                            })\r\n                        ],\r\n                        stats: [\r\n                            ...prevState.stats,\r\n                            response.stats.map((stat, i) =>{\r\n                                return (stat.base_stat + \" \")\r\n                            })\r\n                        ]\r\n                    }));\r\n                })\r\n            }))\r\n\r\n        }\r\n\r\n        // if (this.state.stats.length > 2) {\r\n        //     console.log(this.state.stats[0][1]);\r\n        // }\r\n        //  console.log(this.state.stats)\r\n    }\r\n\r\n\r\n    render() {\r\n        const pokemonList = this.props.starters.map((pok, index) => {\r\n            if (this.state.stats.length > 2) {\r\n                return <Card\r\n                            key= { index }\r\n                            name={ pok.name }\r\n                            url={ this.state.urls[index] }\r\n                            type={ this.state.types[index] }\r\n                            stat={ this.state.stats[index]}\r\n                        />\r\n            } else {\r\n                return null\r\n            }\r\n\r\n        })\r\n\r\n        return(\r\n\r\n                <React.Fragment>\r\n                    { pokemonList }\r\n                </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CardList\r\n","import React, { Component } from 'react';\nimport './App.sass';\nimport Head from './Head';\nimport CardList from './CardList';\n\nclass App extends Component {\n\n    state = {\n        pokemons: []\n    }\n\n    componentDidMount() {\n        fetch('https://pokeapi.co/api/v2/pokemon/')\n            .then(resp => resp.json())\n            .then(res => {\n                this.setState( { pokemons: res.results })\n            })\n    }\n\n\n    render() {\n\n        const { pokemons } = this.state;\n        const starters = pokemons.filter(poke => {\n            if(poke.name === \"bulbasaur\" || poke.name === \"charmander\" ||\n                poke.name === \"squirtle\") {\n                return poke\n            } else {\n                return null\n            }\n\n        })\n        const urlList = starters.map(pok => {\n            return pok.url\n        })\n        return (\n\n            <React.Fragment>\n                  <Head />\n                  <div className=\"container\">\n                      <CardList starters={ starters } urls={ urlList } />\n                  </div>\n            </React.Fragment>\n        );\n    }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}